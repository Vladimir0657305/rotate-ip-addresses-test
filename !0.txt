К сожалению, document.querySelector нельзя использовать в Node.js, так как это метод, предназначенный для работы в браузере с DOM-деревом. Вместо этого можно использовать библиотеки для работы с HTML-кодом, такие как cheerio.

Чтобы использовать cheerio, необходимо установить ее через npm командой npm install cheerio. Затем можно создать объект $ и загрузить в него HTML-код:

const cheerio = require('cheerio');
const html = '<html><body><div><p>Hello world</p></div></body></html>';
const $ = cheerio.load(html);


После этого можно использовать $ для поиска элементов на странице, например:

const p = $('p');
console.log(p.text()); // Выведет "Hello world"


Для поиска элемента по атрибуту можно использовать следующий синтаксис:

const script = $('script[type="application/ld+json"]');


Но я же передаю в функцию findData распарсенный код после const dataNext = await rotateWithBrightData(nextUrl);
                const documentNext = parse5.parse(dataNext);
                findData(documentNext); Как мне получить const $ = cheerio.load(html); ?

Вы можете создать объект Cheerio из переданного в функцию findData узла DOM, используя cheerio.load() и затем использовать его для поиска элементов по селекторам CSS. Например:

const cheerio = require('cheerio');

const findData = (node) => {
  const $ = cheerio.load(node);
  $('script[type="application/ld+json"]').each((index, element) => {
    const scriptContent = $(element).html().trim();
    const data = JSON.parse(scriptContent);
    if (data.name) {
      const name = data.name;
      parsedData.push(name);
      console.log(name);
    }
  });
};


